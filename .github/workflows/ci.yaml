on:
  # TODO: add tag trigger
  push:
    branches:
      - main
  # pull_request:
  #   branches:
  #     - main
  workflow_dispatch: {}

jobs:
  # todo: move to a separate borkflow
  validate:
    name: "Validate dataset"
    runs-on: "ubuntu-latest"
    container: ghcr.io/riverbench/dataset-ci-worker:main

    steps:
      - name: "Checkout dataset repository"
        uses: actions/checkout@v3
        with:
          path: dataset
          lfs: true

      - name: "Checkout schema repository"
        uses: actions/checkout@v3
        with:
          repository: 'RiverBench/schema'
          path: schema

      - name: "Validate the dataset"
        run: ci-worker validate-repo dataset schema/src/metadata_shacl.ttl

  package:
    needs: validate
    name: "Package dataset"
    runs-on: "ubuntu-latest"
    container: ghcr.io/riverbench/dataset-ci-worker:main
    # Force only one package job to execute at a time, to avoid duplicating work.
    concurrency: package-dataset
    outputs:
      package-key: ${{ steps.cache-dataset-restore.outputs.cache-primary-key }}

    steps:
      - name: "Checkout dataset repository"
        uses: actions/checkout@v3
        with:
          path: dataset
          lfs: true

      - name: Check if the packaged dataset is cached
        id: cache-dataset-restore
        uses: actions/cache/restore@v3
        with:
          lookup-only: true
          path: package_out
          key: cache-package-${{ hashFiles('/app/ci-worker-assembly.jar', 'dataset/metadata.ttl', 'dataset/data/*.tar.gz') }}
      
      - name: "Package the dataset"
        if: steps.cache-dataset-restore.outputs.cache-hit != 'true'
        run: |
          mkdir package_out
          ci-worker package dataset package_out

      - name: Save the packaged dataset in cache
        id: cache-dataset-save
        uses: actions/cache/save@v3
        if: steps.cache-dataset-restore.outputs.cache-hit != 'true'
        with:
          path: package_out
          key: ${{ steps.cache-dataset-restore.outputs.cache-primary-key }}

  pre-release:
    # TODO: add if
    needs: package
    name: "Make a pre-release"
    runs-on: "ubuntu-latest"
    container: ghcr.io/riverbench/dataset-ci-worker:main
    permissions: write-all
    steps:
      - name: Restore packaged dataset from cache
        id: cache-dataset-restore
        uses: actions/cache/restore@v3
        with:
          path: package_out
          key: ${{ needs.package.outputs.package-key }}

      - name: Delete previous latest release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload files for the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "latest"
          prerelease: true
          name: "Latest dataset package"
          files: 'package_out/*'
          fail_on_unmatched_files: true
          generate_release_notes: true

  # TODO: add tagged releases

        